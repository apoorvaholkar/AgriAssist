{"version":3,"file":"static/js/14.be063f55.chunk.js","mappings":"w6LAIA,MAwDA,EAxD4BA,KAC1B,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,GAAI,KAC5DC,EAAuBC,IAA4BN,EAAAA,EAAAA,UAAS,IAgB7DO,EAAoBC,IACxB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BZ,GAAaa,IAAS,IAAUA,EAAW,CAACH,GAAOI,WAAWH,IAAU,KAAK,EAG/E,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,gCACjCF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,kBAAkBG,SAAUV,IAAOA,EAAEW,iBArB7BC,MAC1B,MAAM,EAAEnB,EAAC,EAAEC,EAAC,EAAEC,EAAC,GAAEC,GAAON,EAClBuB,EAAsBC,EAAAA,QAAsBC,GACzCtB,GAAKsB,EAAMtB,GAAKC,GAAKqB,EAAMrB,GAAKC,GAAKoB,EAAMpB,GAAKqB,KAAKC,IAAIrB,EAAKmB,EAAMnB,KAAO,KAGhFiB,EAAoBK,OAAS,EAC/BpB,EAAyBe,EAAoB,GAAGM,YAEhDrB,EAAyB,+BAC3B,EAWyEc,EAAqB,EAAIJ,SAAA,EAC9FF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,iBAELC,EAAAA,EAAAA,KAAA,SAAOW,KAAK,SAASnB,KAAK,IAAIC,MAAOZ,EAAUG,EAAG4B,SAAUtB,QAE9DU,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,mBAELC,EAAAA,EAAAA,KAAA,SAAOW,KAAK,SAASnB,KAAK,IAAIC,MAAOZ,EAAUI,EAAG2B,SAAUtB,QAE9DU,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,kBAELC,EAAAA,EAAAA,KAAA,SAAOW,KAAK,SAASnB,KAAK,IAAIC,MAAOZ,EAAUK,EAAG0B,SAAUtB,QAE9DU,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,8BAELC,EAAAA,EAAAA,KAAA,SAAOW,KAAK,SAASE,KAAK,MAAMrB,KAAK,KAAKC,MAAOZ,EAAUM,GAAIyB,SAAUtB,QAE3EU,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAASb,UAAU,mBAAkBC,SAAC,kBAErDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,CAAC,2BACbX,OAEvB,C","sources":["scenes/Fertilizer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport fertilizerData from '../csv/fertilizer.json'; // Assuming you have the fertilizer data in a JSON file\nimport './Fertilizer.css'; // Import your CSS file\n\nconst FertilizerComponent = () => {\n  const [userInput, setUserInput] = useState({ N: 0, P: 0, K: 0, pH: 0.0 }); // Default pH value set to 7.0\n  const [recommendedFertilizer, setRecommendedFertilizer] = useState('');\n\n  // Function to recommend fertilizer based on user inputs\n  const recommendFertilizer = () => {\n    const { N, P, K, pH } = userInput;\n    const matchingFertilizers = fertilizerData.filter(entry => {\n      return N >= entry.N && P >= entry.P && K >= entry.K && Math.abs(pH - entry.pH) <= 0.1; // Match pH within a range of 0.1\n    });\n\n    if (matchingFertilizers.length > 0) {\n      setRecommendedFertilizer(matchingFertilizers[0].Fertilizer); // Set the recommended fertilizer\n    } else {\n      setRecommendedFertilizer('No matching fertilizer found');\n    }\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setUserInput(prevState => ({ ...prevState, [name]: parseFloat(value) || 0 }));\n  };\n\n  return (\n    <div className=\"fertilizer-container\">\n      <h2 className=\"fertilizer-title\">Fertilizer Recommendations</h2>\n      <form className=\"fertilizer-form\" onSubmit={e => { e.preventDefault(); recommendFertilizer(); }}>\n        <label>\n          Nitrogen (N):\n          <input type=\"number\" name=\"N\" value={userInput.N} onChange={handleInputChange} />\n        </label>\n        <br />\n        <label>\n          Phosphorus (P):\n          <input type=\"number\" name=\"P\" value={userInput.P} onChange={handleInputChange} />\n        </label>\n        <br />\n        <label>\n          Potassium (K):\n          <input type=\"number\" name=\"K\" value={userInput.K} onChange={handleInputChange} />\n        </label>\n        <br />\n        <label>\n          Potenial of Hydrogen (pH):\n          <input type=\"number\" step=\"0.1\" name=\"pH\" value={userInput.pH} onChange={handleInputChange} />\n        </label>\n        <br />\n        <button type=\"submit\" className=\"recommend-button\">Recommend</button>\n      </form>\n      <div className=\"recommended-fertilizer\">\n        Recommended Fertilizer: {recommendedFertilizer}\n      </div>\n    </div>\n  );\n};\n\nexport default FertilizerComponent;\n"],"names":["FertilizerComponent","userInput","setUserInput","useState","N","P","K","pH","recommendedFertilizer","setRecommendedFertilizer","handleInputChange","e","name","value","target","prevState","parseFloat","_jsxs","className","children","_jsx","onSubmit","preventDefault","recommendFertilizer","matchingFertilizers","fertilizerData","entry","Math","abs","length","Fertilizer","type","onChange","step"],"sourceRoot":""}