{"version":3,"file":"static/js/927.c9ca6f9a.chunk.js","mappings":"wKAWAA,EAAAA,GAAAA,SACIC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,EACAC,EAAAA,IAGJ,MA4FA,EA5FkCC,KAC9B,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,SAE3CC,EAAO,CACXC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtFC,SAAU,CACR,CACIC,MAAO,oBACPH,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9DI,gBAAiB,WAErB,CACID,MAAO,uBACPH,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9DI,gBAAiB,WAErB,CACID,MAAO,wBACPH,KAAM,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5DI,gBAAiB,WAErB,CACID,MAAO,2BACPH,KAAM,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7DI,gBAAiB,WAErB,CACID,MAAO,mBACPH,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1DI,gBAAiB,WAErB,CACID,MAAO,sBACPH,KAAM,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3DI,gBAAiB,aAiCzB,OAbAC,EAAAA,EAAAA,YAAU,KAEN,MAAMC,EAAYC,aAAaC,QAAQ,gBACnCF,GACAR,EAAgBQ,EACpB,GACD,KAEHD,EAAAA,EAAAA,YAAU,KAENE,aAAaE,QAAQ,eAAgBZ,EAAa,GACnD,CAACA,KAGAa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,MAAA,UAAQG,MAAO,CAACT,gBAAgB,QAAQU,WAAW,MAAMC,aAAa,QAASC,SAnB7DC,IACtBnB,EAAgBmB,EAAMC,OAAOC,MAAM,EAkB4EA,MAAOtB,EAAae,SAAA,EAC3HQ,EAAAA,EAAAA,KAAA,UAAQD,MAAM,QAAOP,SAAC,WACtBQ,EAAAA,EAAAA,KAAA,UAAQD,MAAM,YAAWP,SAAC,eAC1BQ,EAAAA,EAAAA,KAAA,UAAQD,MAAM,OAAMP,SAAC,YAExBf,IACGuB,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAACQ,UAAU,QAAQP,WAAW,SAASF,UAE/CQ,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAACS,MAAO,QAASC,OAAQ,QAAQR,aAAa,OAAOD,WAAW,OAAOO,UAAU,SAAST,UACtGQ,EAAAA,EAAAA,KAACI,EAAAA,GAAG,CACAxB,KAAM,CACFC,OAAQD,EAAKC,OACbC,SAAUF,EAAKE,SAASuB,QAAOC,GAAWA,EAAQvB,MAAMwB,cAAcC,SAAS/B,MAEnFgC,QA5CL,CACXC,OAAQ,CACJC,EAAG,CACCC,SAAS,GAEbC,EAAG,CACCD,SAAS,aA2CX,C","sources":["Pages/ProductionComparisonChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Bar } from 'react-chartjs-2';\nimport './ProductionComparisonChart.css';\n\nimport { Chart as ChartJS, \n    BarElement, \n    CategoryScale,\n    LinearScale,\n    Tooltip, \n    Legend } from 'chart.js';\n\nChartJS.register(\n    BarElement,\n    CategoryScale,\n    LinearScale,\n    Tooltip,\n    Legend\n);\n\nconst ProductionComparisonChart = () => {\n    const [selectedCrop, setSelectedCrop] = useState('wheat'); // Set 'wheat' as default selectedCrop\n\n    const data = {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      datasets: [\n        {\n            label: 'Last Year - Wheat',\n            data: [100, 120, 150, 130, 140, 160, 170, 180, 190, 200, 210, 220], // Example data for last year - Wheat\n            backgroundColor: '#132a13',\n        },\n        {\n            label: 'Current Year - Wheat',\n            data: [120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230], // Example data for current year - Wheat\n            backgroundColor: '#b8e62c',\n        },\n        {\n            label: 'Last Year - Sugarcane',\n            data: [80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190], // Example data for last year - Sugarcane\n            backgroundColor: '#132a13',\n        },\n        {\n            label: 'Current Year - Sugarcane',\n            data: [90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200], // Example data for current year - Sugarcane\n            backgroundColor: '#b8e62c',\n        },\n        {\n            label: 'Last Year - Rice',\n            data: [60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170], // Example data for last year - Rice\n            backgroundColor: '#132a13',\n        },\n        {\n            label: 'Current Year - Rice',\n            data: [70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180], // Example data for current year - Rice\n            backgroundColor: '#b8e62c',\n        },\n      ]\n    };\n\n    const options ={\n        scales: {\n            x: { \n                stacked: true\n            },\n            y: {\n                stacked: true\n            }\n        }\n    };\n\n    const handleCropChange = (event) => {\n        setSelectedCrop(event.target.value);\n    };\n\n    useEffect(() => {\n        // Update the selectedCrop state based on localStorage on component mount\n        const savedCrop = localStorage.getItem('selectedCrop');\n        if (savedCrop) {\n            setSelectedCrop(savedCrop);\n        }\n    }, []);\n\n    useEffect(() => {\n        // Save selectedCrop to localStorage whenever it changes\n        localStorage.setItem('selectedCrop', selectedCrop);\n    }, [selectedCrop]);\n\n    return (\n        <div className=\"container\">\n            <select style={{backgroundColor:'azure',marginLeft:'1px',marginBottom:'70px'}} onChange={handleCropChange} value={selectedCrop}>\n                <option value=\"wheat\">Wheat</option>\n                <option value=\"sugarcane\">Sugarcane</option>\n                <option value=\"rice\">Rice</option>\n            </select>\n            {selectedCrop && (\n                <div style={{marginTop:'-75px',marginLeft:'-30px'}}>\n                    \n                    <div style={{width: '620px', height: '310px',marginBottom:'20px',marginLeft:'50px',marginTop:'-70px'}}>\n                    <Bar\n                        data={{ \n                            labels: data.labels,\n                            datasets: data.datasets.filter(dataset => dataset.label.toLowerCase().includes(selectedCrop))\n                        }}\n                        options={options}\n                    />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ProductionComparisonChart;\n"],"names":["ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","ProductionComparisonChart","selectedCrop","setSelectedCrop","useState","data","labels","datasets","label","backgroundColor","useEffect","savedCrop","localStorage","getItem","setItem","_jsxs","className","children","style","marginLeft","marginBottom","onChange","event","target","value","_jsx","marginTop","width","height","Bar","filter","dataset","toLowerCase","includes","options","scales","x","stacked","y"],"sourceRoot":""}