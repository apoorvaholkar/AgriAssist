{"version":3,"file":"static/js/183.62e31f34.chunk.js","mappings":"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","sources":["Pages/TempChart.js","../node_modules/@mui/icons-material/Air.js","../node_modules/@mui/icons-material/Water.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport './TempChart.css';\nimport { MdOutlineWaterDrop } from \"react-icons/md\";\nimport AirIcon from '@mui/icons-material/Air';\nimport WaterIcon from '@mui/icons-material/Water';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nfunction TempChart() {\n    const [weatherData, setWeatherData] = useState(null);\n    const [isLoading, setIsLoading] = useState(false); // Changed to false by default\n    const [currentDate, setCurrentDate] = useState('');\n    const [currentWeek, setCurrentWeek] = useState('');\n    const [currentMonth, setCurrentMonth] = useState('');\n\n    useEffect(() => {\n        const fetchWeatherData = async () => {\n            setIsLoading(true); // Set loading to true while fetching data\n            try {\n                const response = await axios.get(\n                    `https://api.openweathermap.org/data/2.5/weather?q=Hubli&units=metric&appid=f3635cc9b3ba1b949b15fd11912b1c70`\n                );\n                setWeatherData(response.data);\n            } catch (error) {\n                console.error('Error fetching weather data:', error);\n            }\n            setIsLoading(false); // Set loading to false after fetching data\n        };\n\n        fetchWeatherData();\n\n        // Get current date, week, and month\n        const currentDateObj = new Date();\n        setCurrentDate(currentDateObj.getDate());\n        setCurrentWeek(currentDateObj.toLocaleDateString('en-US', { weekday: 'long' }));\n        setCurrentMonth(currentDateObj.toLocaleDateString('en-US', { month: 'long' }));\n    }, []);\n\n    if (!weatherData) {\n        return null; // Render nothing if weatherData is null initially\n    }\n\n    const { main, rain, wind } = weatherData;\n    const temperature = main.temp;\n    const pressure = main.pressure;\n    const rainfall = rain ? rain['1h'] || rain['3h'] || 0 : 0;\n    const windSpeed = wind ? wind.speed : 0;\n\n    const data = {\n        labels: [],\n        datasets: [{\n            data: [temperature, 100 - temperature],\n            backgroundColor: ['#b8e62c', '#132a13'],\n            borderColor: ['#b8e62c', '#132a13'],\n        }]\n    };\n\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n    };\n\n    return (\n        <div className=\"chart-container\">\n            <div style={{ display: 'flex', width: '220px', height: '220px', marginBottom: '20px', marginLeft: '50px' }}>\n                <div>\n                    <div className=\"date-info\">\n                        <p className='wp'>Weather's Today</p>\n                        <div className='week'>{currentWeek}</div>\n                        <div className='date'>\n                            <div> {currentDate}, </div>\n                            <div style={{ marginLeft: '2px' }}>  {currentMonth}</div>\n                        </div>\n                    </div>\n                    <div className='tempch1'>\n                        {temperature}°C\n                    </div>\n                    <p className='tempp1'>Hubli</p>\n                </div>\n                <Doughnut data={data} options={options}></Doughnut>\n                <div className='inside'>\n                    <p className='tempy'>\n                        {temperature}°C\n                    </p>\n                    <p style={{ marginLeft: '-8px', fontSize: '14px', color: '#B4B4B8', marginTop: '-4px' }}>Room temp</p>\n                </div>\n            </div>\n            <div className=\"weather-data\">\n                <div style={{ display: 'flex', marginBottom: '20px' }}>\n                    <MdOutlineWaterDrop className='ictp' />\n                    <div className='w'>{rainfall} mm</div>\n                </div>\n                <div className='w1'><WaterIcon className='ictp1' /> {pressure} hPa</div>\n                <div className='w1'><AirIcon className='ictp1' /> {windSpeed} m/s</div>\n            </div>\n        </div>\n    );\n}\n\nexport default TempChart;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.5 17c0 1.65-1.35 3-3 3s-3-1.35-3-3h2c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1H2v-2h9.5c1.65 0 3 1.35 3 3M19 6.5C19 4.57 17.43 3 15.5 3S12 4.57 12 6.5h2c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5S16.33 8 15.5 8H2v2h13.5c1.93 0 3.5-1.57 3.5-3.5m-.5 4.5H2v2h16.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5v2c1.93 0 3.5-1.57 3.5-3.5S20.43 11 18.5 11\"\n}), 'Air');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21.98 14H22zM5.35 13c1.19 0 1.42 1 3.33 1 1.95 0 2.09-1 3.33-1 1.19 0 1.42 1 3.33 1 1.95 0 2.09-1 3.33-1 1.19 0 1.4.98 3.31 1v-2c-1.19 0-1.42-1-3.33-1-1.95 0-2.09 1-3.33 1-1.19 0-1.42-1-3.33-1-1.95 0-2.09 1-3.33 1-1.19 0-1.42-1-3.33-1-1.95 0-2.09 1-3.33 1v2c1.9 0 2.17-1 3.35-1m13.32 2c-1.95 0-2.09 1-3.33 1-1.19 0-1.42-1-3.33-1-1.95 0-2.1 1-3.34 1-1.24 0-1.38-1-3.33-1-1.95 0-2.1 1-3.34 1v2c1.95 0 2.11-1 3.34-1 1.24 0 1.38 1 3.33 1 1.95 0 2.1-1 3.34-1 1.19 0 1.42 1 3.33 1 1.94 0 2.09-1 3.33-1 1.19 0 1.42 1 3.33 1v-2c-1.24 0-1.38-1-3.33-1M5.35 9c1.19 0 1.42 1 3.33 1 1.95 0 2.09-1 3.33-1 1.19 0 1.42 1 3.33 1 1.95 0 2.09-1 3.33-1 1.19 0 1.4.98 3.31 1V8c-1.19 0-1.42-1-3.33-1-1.95 0-2.09 1-3.33 1-1.19 0-1.42-1-3.33-1-1.95 0-2.09 1-3.33 1-1.19 0-1.42-1-3.33-1C3.38 7 3.24 8 2 8v2c1.9 0 2.17-1 3.35-1\"\n}), 'Water');"],"names":["ChartJS","ArcElement","Tooltip","Legend","weatherData","setWeatherData","useState","isLoading","setIsLoading","currentDate","setCurrentDate","currentWeek","setCurrentWeek","currentMonth","setCurrentMonth","useEffect","async","response","axios","data","error","console","fetchWeatherData","currentDateObj","Date","getDate","toLocaleDateString","weekday","month","main","rain","wind","temperature","temp","pressure","rainfall","windSpeed","speed","labels","datasets","backgroundColor","borderColor","_jsxs","className","children","style","display","width","height","marginBottom","marginLeft","_jsx","Doughnut","options","responsive","maintainAspectRatio","fontSize","color","marginTop","MdOutlineWaterDrop","WaterIcon","AirIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}