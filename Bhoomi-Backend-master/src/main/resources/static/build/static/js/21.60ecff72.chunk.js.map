{"version":3,"file":"static/js/21.60ecff72.chunk.js","mappings":"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","sources":["scenes/CropInventory.js"],"sourcesContent":["// import React from 'react';\n// import cropsData from './Cropdata';\nimport React, { useEffect, useState } from 'react';\nimport { getAllCrops } from '../backendservice';\nimport './CropInventory.css';\nimport TomatoImage from '../Images/tomato.jpg'; \nimport AppleImage from '../Images/apple.jpg'; \nimport CarrotImage from '../Images/carrot.jpg'; \nimport PotatoImage from '../Images/potato.jpg'; \nimport BananaImage from '../Images/banana.jpg'; \nimport LettuceImage from '../Images/lettuce.jpg';     \nimport GrapesImage from '../Images/Grapes.jpg';\nimport CucumberImage from '../Images/cucumber.jpg';\nimport OrangeImage from '../Images/orange.jpg';\nimport SpinachImage from '../Images/spinach.jpg';\nimport MangoImage from '../Images/mango.jpg';\nimport RiceImage from '../Images/rice.jpg';\nimport JowarImage from '../Images/jowar.avif';\nimport BajraImage from '../Images/bajra.jpg';\nimport TurImage from '../Images/tur.jpg';\nimport MoongImage from '../Images/moong.jpg';\nimport UradImage from '../Images/urad.avif';\nimport CottonImage from '../Images/cotton.jpg';\nimport JuteImage from '../Images/jute.png';\nimport GroundnutImage from '../Images/groundnut.jpeg';\nimport SoybeanImage from '../Images/soyabean.jpg';\nimport WheatImage from '../Images/wheat.jpg';\nimport BarleyImage from '../Images/barley.jpg';\nimport MaizeImage from '../Images/maize.jpg';\nimport RubberImage from '../Images/rubber.jpg';\nimport GramImage from '../Images/gram.webp';\nimport MustardImage from '../Images/mustard.jpg';\nimport SesameImage from '../Images/sesame.jpg';\nimport RapeseedImage from '../Images/rapeseed.jpg';\nimport SugarcaneImage from '../Images/sugarcane.avif';\nimport CastorImage from '../Images/castor.webp';\n\nconst imageMap = {\n  TomatoImage: TomatoImage,\n  AppleImage: AppleImage,\n  CarrotImage: CarrotImage,\n  PotatoImage: PotatoImage,\n  BananaImage: BananaImage,\n  LettuceImage: LettuceImage,\n  GrapesImage: GrapesImage,\n  CucumberImage: CucumberImage,\n  OrangeImage: OrangeImage,\n  SpinachImage: SpinachImage,\n  MangoImage: MangoImage,\n  RiceImage: RiceImage,\n  JowarImage: JowarImage,\n  BajraImage: BajraImage,\n  TurImage: TurImage,\n  MoongImage: MoongImage,\n  UradImage: UradImage,\n  CottonImage: CottonImage,\n  JuteImage: JuteImage,\n  GroundnutImage: GroundnutImage,\n  SoybeanImage: SoybeanImage,\n  WheatImage: WheatImage,\n  BarleyImage: BarleyImage,\n  MaizeImage: MaizeImage,\n  RubberImage: RubberImage,\n  GramImage: GramImage,\n  MustardImage: MustardImage,\n  SesameImage: SesameImage,\n  RapeseedImage: RapeseedImage,\n  SugarcaneImage: SugarcaneImage,\n  CastorImage: CastorImage,\n};\n\n\nconst CropInventory = () => {\n  const [cropsData, setCropsData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getAllCrops();\n        setCropsData(data);\n        console.log(data)\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <div className=\"crpcontainer\">\n        {cropsData.map((crop, index) => (\n          <div key={crop.cropsId} className={`box box-${index + 1}`}>\n            <div className=\"crop-summary\">\n              <h3 className='crop-name'>{crop.cropsName}</h3>\n              {index === 0 && (\n                <>\n                  <p className='cip1'>Type: {crop.cropsType}</p>\n                  <p className='cip1'>District: {crop.cropsDistrict}</p>\n                  <p className='cip1'>Found in: {crop.cropsFoundin}</p>\n                  <p className='cip1'>State: {crop.cropsState}</p>\n                  <p className='cip2'>Description: {crop.cropsDescription}</p>\n                </>\n              )}\n              {index === 1 && (\n                <>\n                  <p className='cip3'>Type: {crop.cropsType}</p>\n                  <p className='cip3'>District: {crop.cropsDistrict}</p>\n                  <p className='cip3'>Found in: {crop.cropsFoundin}</p>\n                  <p className='cip3'>State: {crop.cropsState}</p>\n                  <p className='cip4'>Description: {crop.cropsDescription}</p>\n                </>\n              )}\n              {index === 2 && (\n                <>\n                  <p className='cip3'>Type: {crop.cropsType}</p>\n                  <p className='cip3'>District: {crop.cropsDistrict}</p>\n                  <p className='cip3'>Found in: {crop.cropsFoundin}</p>\n                  <p className='cip3'>State: {crop.cropsState}</p>\n                  <p className='cip4'>Description: {crop.cropsDescription}</p>\n                </>\n              )}\n              {index > 2 && (\n                <>\n                  <p>Type: {crop.cropsType}</p>\n                  <p>District: {crop.cropsDistrict}</p>\n                  <p>Found in: {crop.cropsFoundin}</p>\n                </>\n              )}\n            </div>\n            <img src={imageMap[crop.cropsThumb]} alt={crop.cropsName} className=\"crop-thumb\" />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CropInventory;\n"],"names":["imageMap","TomatoImage","AppleImage","CarrotImage","PotatoImage","BananaImage","LettuceImage","GrapesImage","CucumberImage","OrangeImage","SpinachImage","MangoImage","RiceImage","JowarImage","BajraImage","TurImage","MoongImage","UradImage","CottonImage","JuteImage","GroundnutImage","SoybeanImage","WheatImage","BarleyImage","MaizeImage","RubberImage","GramImage","MustardImage","SesameImage","RapeseedImage","SugarcaneImage","CastorImage","CropInventory","cropsData","setCropsData","useState","useEffect","async","data","getAllCrops","console","log","error","fetchData","_jsx","children","className","map","crop","index","_jsxs","concat","cropsName","_Fragment","cropsType","cropsDistrict","cropsFoundin","cropsState","cropsDescription","src","cropsThumb","alt","cropsId"],"sourceRoot":""}