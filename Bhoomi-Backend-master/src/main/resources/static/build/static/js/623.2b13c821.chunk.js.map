{"version":3,"file":"static/js/623.2b13c821.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","f","hex","h1","h2","eq","hexString","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","arguments","length","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","type","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","concat","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","toString","slice","isObject","isNumberFinite","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","static","members","init","formats","diff","startOf","endOf","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","_element","_args","afterEvent","ci","useBorderRadius","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Bar","Doughnut"],"sourceRoot":""}